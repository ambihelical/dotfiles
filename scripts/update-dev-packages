#!/bin/bash
#
# Make sure some development packages are present
#
# Mainly includes common software development packages
if [[ $EUID -ne 0 ]]; then
	echo "This script must be run with root privilegs" 1>&2
	exit 1
fi

script_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

p=""  # normal packages
q=""  # packages that over-recommend
if [ "${OSTYPE:0:10}" == 'linux-gnue' ]; then
	p="$p build-essential ccache"
	p="$p libboost-all-dev"
	p="$p autoconf automake libtool"
	p="$p python3-dev "
	apt-get --quiet --yes --no-install-recommends install $p
elif [ "${OSTYPE:0:5}" == 'linux' ]; then
	. ${script_path}/../bin/common/linux.sh
	linux=$(linux_distribution_name)
	version=$(linux_distribution_version)

 if [ "$linux" == 'Ubuntu' ]; then

  # documentation tools
	q="$q doxygen"
	p="$p manpages-dev manpages-posix-dev ncurses-doc"
	p="$p librsvg2-bin"
  # languages, compilers and building
	p="$p cmake-qt-gui build-essential ccache"
	p="$p clang-3.8 libclang-3.8-dev gcc-doc glibc-doc"
	p="$p autoconf automake libtool gettext intltool"
	p="$p ruby"
  # version control
	p="$p meld git-gui mercurial subversion "
  # libraries sometimes needed to build from source
	p="$p libncurses5-dev"
  # image file dev libs
	p="$p libgtk-3-dev libtiff5-dev libjpeg-dev libgif-dev libxpm-dev libpng-dev libmagick++-dev librsvg2-dev"
	p="$p zlib1g-dev libpoppler-glib-dev libpoppler-private-dev"
	apt-get --quiet --ignore-missing --yes install $p
	apt-get --quiet --ignore-missing --no-install-recommends --yes install $q
	echo "NOTE: Install global via source, debian is out of date"
 elif [ "$linux" == 'Fedora' ]; then
	# building
	p="$p autoconf automake "

	# version control
	p="$p meld git-gui gitk"

	# editor support
	p="$p clang-tools-extra"  # clangd
	p="$p poppler-devel poppler-glib-devel"

	 dnf install -y $p
 fi
elif [ "${OSTYPE:0:6}" == 'darwin' ]; then
	brew update
	p="$p global --with-pygments "
	p="$p cmake "
	p="$p macvim emacs --with-cocoa"
	brew install $p
fi
